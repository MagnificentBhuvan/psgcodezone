{"_id":{"$oid":"5b84fd6a6f591f12c8021a12"},"q_name":"Remove From List","q_desc":"Note: Try to solve this task in O(n) time using O(1) additional space, where n is the number of elements in the list, since this is what you'll be asked to do during an interview.  Given a singly linked list of integers l and an integer k, remove all elements from list l that have a value equal to k.~Example  ~  For l = [3, 1, 2, 3, 4, 5] and k = 3, the output should be removeKFromList(l, k) = [1, 2, 4, 5]; For l = [1, 2, 3, 4, 5, 6, 7] and k = 10, the output should be removeKFromList(l, k) = [1, 2, 3, 4, 5, 6, 7].","q_const":"[execution time limit] 3 seconds (java) ~ Guaranteed constraints: -1000 ≤ k ≤ 1000.","q_inp":"[input] integer k ~ An integer.","q_oup":"[output] linkedlist.integer ~ Return l with all the values equal to k removed."}
{"_id":{"$oid":"5b84fe526f591f12c8021a13"},"q_name":"First Duplicate","q_desc":"Given an array a that contains only numbers in the range from 1 to a.length, find the first duplicate number for which the second occurrence has the minimal index. In other words, if there are more than 1 duplicated numbers, return the number for which the second occurrence has a smaller index than the second occurrence of the other number does. If there are no such elements, return -1. ~ Example ~ For a = [2, 1, 3, 5, 3, 2], the output should be firstDuplicate(a) = 3.  There are 2 duplicates: numbers 2 and 3. The second occurrence of 3 has a smaller index than the second occurrence of 2 does, so the answer is 3.  For a = [2, 4, 3, 5, 1], the output should be firstDuplicate(a) = -1.","q_const":"execution time limit] 3 seconds (java) ~ Guaranteed constraints: 1 ≤ a.length ≤ 105, 1 ≤ a[i] ≤ a.length","q_inp":"[input] array.integer a ","q_oup":"The element in a that occurs in the array more than once and has the minimal index for its second occurrence. If there are no such elements, return -1."}
